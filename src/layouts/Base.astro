---
import BrandIcon from "../components/BrandIcon.astro";
import ScrollToTop from "../components/ScrollToTop.astro";
import SFIcon from "../components/SFIcon.astro";
import motionScriptSrc from "../scripts/motion.ts?url";
import sidebarScriptSrc from "../scripts/sidebar.ts?url";
import themeScriptSrc from "../scripts/theme.ts?url";
import motionCssHref from "../styles/motion.css?url";
import themeCssHref from "../styles/theme.css?url";

interface OgImageMeta {
  url: string;
  alt?: string | null;
  width?: number;
  height?: number;
}

interface BaseProps {
  title?: string;
  description?: string;
  canonical?: string;
  ogTitle?: string;
  ogDescription?: string;
  ogType?: string;
  ogImage?: OgImageMeta | null;
  noIndex?: boolean;
  structuredData?: Record<string, unknown> | string | null;
  sidebar?: boolean;
}

const {
  title = "Home",
  description,
  canonical,
  ogTitle,
  ogDescription,
  ogType = "website",
  ogImage,
  noIndex = false,
  structuredData,
  sidebar = true,
} = Astro.props as BaseProps;

const fullTitle = `${title} â€¢ Tulio Cunha`;
const computedOgTitle = ogTitle ?? fullTitle;
const computedOgDescription = ogDescription ?? description;
const canonicalUrl = canonical ?? (typeof Astro.url !== "undefined" ? Astro.url.href : undefined);
const robotsValue = noIndex ? "noindex,nofollow" : "index,follow";
const structuredDataJson =
  typeof structuredData === "string"
    ? structuredData
    : structuredData
      ? JSON.stringify(structuredData)
      : null;
---

<html lang="en" data-theme="dark">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>{fullTitle}</title>
    <meta name="robots" content={robotsValue} />
    {description && <meta name="description" content={description} />}
    {canonicalUrl && <link rel="canonical" href={canonicalUrl} />}
    <link rel="icon" type="image/svg+xml" href="/terminal-favicon.svg" />

    <!-- Performance: Resource hints for external domains -->
    <link rel="dns-prefetch" href="https://cdn.sanity.io" />
    <link rel="preconnect" href="https://cdn.sanity.io" crossorigin />

    <!-- CDN Fonts: SF Pro Display, SF UI Text, SF Mono -->
    <link rel="preconnect" href="//fdn.fontcdn.ir" />
    <link rel="preconnect" href="//v1.fontapi.ir" />
    <link href="https://v1.fontapi.ir/css/SFProDisplay" rel="stylesheet" />
    <link href="https://v1.fontapi.ir/css/SFUIText" rel="stylesheet" />
    <link href="https://v1.fontapi.ir/css/SFMono" rel="stylesheet" />

    <!-- Theme script must run BEFORE CSS to prevent FOUC -->
    <script is:inline>
      (() => {
        const readStoredTheme = () => {
          try {
            const value = localStorage.getItem("theme");
            return value === "light" || value === "dark" ? value : null;
          } catch {
            return null;
          }
        };

        const stored = readStoredTheme();
        const root = document.documentElement;

        // If user has explicitly chosen a theme, use it
        if (stored === "light" || stored === "dark") {
          root.setAttribute("data-theme", stored);
          // Add class for Shiki code block theme switching
          if (stored === "light") {
            root.classList.remove("dark");
            root.classList.add("light");
          } else {
            root.classList.remove("light");
            root.classList.add("dark");
          }
        } else {
          // Default is dark, add the class
          root.classList.add("dark");
        }
        // Otherwise, respect the HTML's initial data-theme attribute (defaults to dark)
        // No need to set it again as it's already in the HTML
      })();
    </script>

    <link rel="stylesheet" href={themeCssHref} />
    <link rel="stylesheet" href={motionCssHref} />
    <meta property="og:type" content={ogType} />
    <meta property="og:title" content={computedOgTitle} />
    {
      computedOgDescription && (
        <meta property="og:description" content={computedOgDescription} />
      )
    }
    {canonicalUrl && <meta property="og:url" content={canonicalUrl} />}
    {ogImage?.url && <meta property="og:image" content={ogImage.url} />}
    {ogImage?.alt && <meta property="og:image:alt" content={ogImage.alt} />}
    {
      typeof ogImage?.width === "number" && (
        <meta property="og:image:width" content={String(ogImage.width)} />
      )
    }
    {
      typeof ogImage?.height === "number" && (
        <meta property="og:image:height" content={String(ogImage.height)} />
      )
    }
    <meta
      name="twitter:card"
      content={ogImage?.url ? "summary_large_image" : "summary"}
    />
    <meta name="twitter:title" content={computedOgTitle} />
    {
      computedOgDescription && (
        <meta name="twitter:description" content={computedOgDescription} />
      )
    }
    {ogImage?.url && <meta name="twitter:image" content={ogImage.url} />}
    {
      structuredDataJson && (
        <script type="application/ld+json" set:html={structuredDataJson} />
      )
    }

    <!-- Performance: Web Vitals monitoring (dev only) -->
    <script src="/web-vitals.js" async></script>

    <slot name="head" />
  </head>
  <body data-page-state="entering" data-glass-state="rest">
    <a href="#main" class="sr-only">Skip to content</a>
    <header class="topbar">
      <div class="topbar__inner">
        <div class="topbar__brandGroup">
          <button
            type="button"
            class="topbar__menu"
            aria-label="Toggle sidebar"
            aria-expanded="false"
            aria-controls={sidebar ? "site-sidebar" : undefined}
          >
            <SFIcon name="sidebar-left" size={22} stroke={1.4} />
          </button>
          <div class="topbar__brand">
            <span class="topbar__brandName">Tulio Cunha</span>
            <span class="topbar__brandSubtitle">Full Stack Developer</span>
          </div>
        </div>
        <nav class="topbar__nav" aria-label="Global">
          <div
            class="topbar__navMask"
            data-topbar-mask
            data-edge-start="true"
            data-edge-end="true"
          >
            <ul class="topbar__navList" data-topbar-list>
              <li class="topbar__navItem">
                <a
                  href="/"
                  class="topbar__navLink"
                  aria-current={Astro.url.pathname === "/" ? "page" : undefined}
                >
                  <span class="topbar__navLabel">Home</span>
                </a>
              </li>
              <li class="topbar__navItem">
                <a
                  href="/blog/"
                  class="topbar__navLink"
                  aria-current={Astro.url.pathname.startsWith("/blog")
                    ? "page"
                    : undefined}
                >
                  <span class="topbar__navLabel">Blog</span>
                </a>
              </li>
              <li class="topbar__navItem">
                <a
                  href="/projects"
                  class="topbar__navLink"
                  aria-current={Astro.url.pathname === "/projects" ? "page" : undefined}
                >
                  <span class="topbar__navLabel">Projects</span>
                </a>
              </li>
            </ul>
          </div>
        </nav>
        <div class="topbar__actions">
          <div class="themeToggle">
            <input
              id="theme-toggle"
              type="checkbox"
              class="themeToggle__control"
              data-theme-toggle
              aria-label="Toggle theme"
            />
            <label class="themeToggle__label" for="theme-toggle">
              <span class="sr-only">Toggle theme</span>
            </label>
          </div>
        </div>
      </div>
    </header>

    <main class="layout">
      {
        sidebar && (
          <aside id="site-sidebar" class="sidebar" aria-label="Sidebar">
            <div class="sidebar__inner">
              <div class="sidebar__dragHandle" aria-hidden="true"></div>
              <div class="sidebar__header">Navigation</div>
              <nav class="sidebar__nav" role="navigation" aria-label="Sections">
                <div class="sidebar__group sidebar__group--site">
                  <div class="sidebar__groupLabel">Site</div>
                  <a
                    class="sidebar__link"
                    href="/"
                    aria-current={Astro.url.pathname === "/" ? "page" : undefined}
                  >
                    <span class="icon-tile" aria-hidden="true">
                      <SFIcon name="sparkle" size={22} stroke={1.4} />
                    </span>
                    Home
                  </a>
                  <a
                    class="sidebar__link"
                    href="/blog/"
                    aria-current={
                      Astro.url.pathname.startsWith("/blog") ? "page" : undefined
                    }
                  >
                    <span class="icon-tile" aria-hidden="true">
                      <SFIcon name="book" size={22} stroke={1.4} />
                    </span>
                    Blog
                  </a>
                  <a
                    class="sidebar__link"
                    href="/projects"
                    aria-current={Astro.url.pathname === "/projects" ? "page" : undefined}
                  >
                    <span class="icon-tile" aria-hidden="true">
                      <SFIcon name="cube" size={22} stroke={1.4} />
                    </span>
                    Projects
                  </a>
                </div>
                <div class="sidebar__group sidebar__group--social">
                  <div class="sidebar__groupLabel">Social</div>
                  <a
                    class="sidebar__link"
                    href="https://github.com/tuliopc23"
                    target="_blank"
                    rel="noreferrer noopener"
                  >
                    <span class="icon-tile" aria-hidden="true">
                      <BrandIcon name="github" size={22} />
                    </span>
                    GitHub
                  </a>
                  <a
                    class="sidebar__link"
                    href="https://instagram.com/tuliopinheirocunha"
                    target="_blank"
                    rel="noreferrer noopener"
                  >
                    <span class="icon-tile" aria-hidden="true">
                      <BrandIcon name="instagram" size={22} />
                    </span>
                    Instagram
                  </a>
                  <a class="sidebar__link" href="mailto:contact@tuliocunha.dev">
                    <span class="icon-tile" aria-hidden="true">
                      <SFIcon name="mail" size={22} stroke={1.4} />
                    </span>
                    Email
                  </a>
                  <a
                    class="sidebar__link"
                    href="https://linkedin.com/in/tuliocunha"
                    target="_blank"
                    rel="noreferrer noopener"
                  >
                    <span class="icon-tile" aria-hidden="true">
                      <BrandIcon name="linkedin" size={22} />
                    </span>
                    LinkedIn
                  </a>
                  <a
                    class="sidebar__link"
                    href="https://fantastical.app/tuliopinheirocunha"
                    target="_blank"
                    rel="noreferrer noopener"
                  >
                    <span class="icon-tile" aria-hidden="true">
                      <SFIcon name="calendar" size={22} stroke={1.4} />
                    </span>
                    Book Time
                  </a>
                </div>
              </nav>
              <div class="sidebar__filter">
                <input
                  id="sidebarFilter"
                  type="search"
                  placeholder="Filter"
                  aria-label="Filter sidebar"
                />
                <kbd class="slash">/</kbd>
                <span
                  class="sr-only"
                  data-sidebar-status
                  aria-live="polite"
                  role="status"
                />
              </div>
            </div>
          </aside>
        )
      }

      <section class="content">
        <div id="main">
          <slot />
        </div>
        <footer class="footer">
          <div class="footer__inner">
            <div class="footer__about">
              <p class="footer__title">Tulio Cunha</p>
              <p class="footer__copy">
                Full stack developer building native and web experiences through precise
                tooling and considerate interfaces.
              </p>
            </div>
            <div class="footer__links" aria-label="Footer links">
              <a href="/projects">Projects</a>
              <a href="/blog/">Blog</a>
              <a
                href="https://portfolio.tuliocunha.dev"
                target="_blank"
                rel="noreferrer noopener">Portfolio</a
              >
              <a href="mailto:contact@tuliocunha.dev">Email</a>
            </div>
            <p class="footer__legal">
              Â© {new Date().getFullYear()} Tulio Cunha. Built with Astro.
            </p>
          </div>
        </footer>
      </section>
    </main>

    <ScrollToTop />
    <script src={motionScriptSrc} type="module"></script>
    <script src={themeScriptSrc} type="module"></script>
    <script src={sidebarScriptSrc} type="module"></script>
    <script src="/src/scripts/scroll-indicators.ts" type="module"></script>
    <script is:inline>
      if (typeof window !== "undefined") {
        const mask = document.querySelector("[data-topbar-mask]");
        const list = mask?.querySelector("[data-topbar-list]");

        const updateEdges = () => {
          if (!mask) return;
          const atStart = mask.scrollLeft <= 1;
          const atEnd = mask.scrollLeft + mask.clientWidth >= mask.scrollWidth - 1;
          mask.dataset.edgeStart = atStart ? "true" : "false";
          mask.dataset.edgeEnd = atEnd ? "true" : "false";
        };

        const centerActive = () => {
          if (!mask || !list) return;
          if (!window.matchMedia("(max-width: 1023px)").matches) return;
          const active = list.querySelector('a[aria-current="page"]');
          if (!active) return;
          const reduceMotion = window.matchMedia(
            "(prefers-reduced-motion: reduce)"
          ).matches;
          requestAnimationFrame(() => {
            const activeRect = active.getBoundingClientRect();
            const maskRect = mask.getBoundingClientRect();
            const offset = activeRect.left - maskRect.left;
            const scrollLeft =
              mask.scrollLeft + offset - (mask.clientWidth - active.clientWidth) / 2;
            mask.scrollTo({
              left: Math.max(scrollLeft, 0),
              behavior: reduceMotion ? "auto" : "smooth",
            });
          });
        };

        if (mask) {
          updateEdges();
          centerActive();
          mask.addEventListener("scroll", updateEdges, { passive: true });
          window.addEventListener("resize", () => {
            updateEdges();
            centerActive();
          });
        }

        // Keyboard navigation for topbar nav links (arrow keys)
        const navLinks = list?.querySelectorAll(".topbar__navLink");
        if (navLinks && navLinks.length > 0) {
          navLinks.forEach((link, index) => {
            link.addEventListener("keydown", (e) => {
              if (e.key === "ArrowRight" || e.key === "ArrowLeft") {
                e.preventDefault();
                let nextIndex;
                if (e.key === "ArrowRight") {
                  nextIndex = (index + 1) % navLinks.length;
                } else {
                  nextIndex = (index - 1 + navLinks.length) % navLinks.length;
                }
                navLinks[nextIndex].focus();
              }
            });
          });
        }
      }
    </script>
  </body>
</html>
