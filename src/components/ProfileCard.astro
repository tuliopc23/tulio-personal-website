---
import { Image } from "astro:assets";
import BrandIcon from "./BrandIcon.astro";
import SFIcon from "./SFIcon.astro";
import { getBrandIcon } from "./brand-icons";
import AvatarSrc from "../assets/avatar.png";

const {
  name = "Tulio Cunha",
  title = "Full Stack Developer",
  location = "Brazil",
  email = "contact@tuliocunha.dev",
} = Astro.props;

const _contacts = [
  {
    label: "GitHub",
    value: "@tuliopc23",
    href: "https://github.com/tuliopc23",
    icon: "github",
  },
  {
    label: "Portfolio",
    value: "https://portfolio.tuliocunha.dev",
    href: "https://portfolio.tuliocunha.dev",
    icon: "globe",
  },
  {
    label: "Instagram",
    value: "https://instagram.com/tuliopinheirocunha",
    href: "https://instagram.com/tuliopinheirocunha",
    icon: "instagram",
  },
  {
    label: "LinkedIn",
    value: "https://linkedin.com/in/tuliopinheirocunha",
    href: "https://linkedin.com/in/tuliopinheirocunha",
    icon: "linkedin",
  },
  {
    label: "Book time",
    value: "https://fantastical.app/tuliopinheirocunha",
    href: "https://fantastical.app/tuliopinheirocunha",
    icon: "calendar",
  },
];

const _meta = [
  {
    label: "Location",
    value: location,
    icon: "pin",
  },
  {
    label: "Email",
    value: email,
    icon: "mail",
    href: `mailto:${email}`,
  },
];
---

<section
  class="profileCard"
  aria-label={`Profile information for ${name}`}
  data-reveal
  data-reveal-group="profile-card"
  data-reveal-order="0"
>
  <div class="profileCard__media">
    <figure class="profileCard__photo">
      <Image
        src={AvatarSrc}
        alt={name}
        width={196}
        height={196}
        loading="eager"
        decoding="async"
      />
    </figure>
  </div>
  <div class="profileCard__content">
    <header class="profileCard__header">
      <p class="profileCard__eyebrow">Building native and web products</p>
      <h2 class="profileCard__name">{name}</h2>
      <p class="profileCard__title">{title}</p>
    </header>

    <dl class="profileCard__meta" aria-label="Key details">
      {
        _meta.map((item) => (
          <div class="profileCard__metaItem">
            <dt>
              {item.icon && (
                <span class="profileCard__metaIcon" aria-hidden="true">
                  {getBrandIcon(item.icon) ? (
                    <BrandIcon name={item.icon} size={16} />
                  ) : (
                    <SFIcon name={item.icon} size={16} stroke={1.6} />
                  )}
                </span>
              )}
              <span class="profileCard__metaLabel">{item.label}</span>
            </dt>
            <dd>{item.href ? <a href={item.href}>{item.value}</a> : item.value}</dd>
          </div>
        ))
      }
    </dl>

    <p class="profileCard__summary">
      I'm a full stack developer who spends my days tinkering with high- and low-level
      programming to solve my problemsâ€”and yours if you let me.
    </p>

    <ul
      class="profileCard__contacts profileCard__contactsDesktop"
      aria-label="Ways to reach Tulio"
    >
      {
        _contacts.map((entry) => {
          const brand = entry.icon ? getBrandIcon(entry.icon) : null;
          const iconStyle = brand?.ink ? { "--chip-icon-color": brand.ink } : undefined;
          return (
            <li>
              <a
                class="profileCard__chip"
                href={entry.href}
                target="_blank"
                rel="noreferrer noopener"
              >
                {entry.icon && (
                  <span
                    class="profileCard__chipIcon"
                    aria-hidden="true"
                    style={iconStyle}
                    data-brand={brand ? entry.icon : undefined}
                  >
                    {brand ? (
                      <BrandIcon name={entry.icon} size={20} />
                    ) : (
                      <SFIcon
                        name={entry.icon}
                        size={20}
                        stroke={entry.icon === "calendar" ? 1.4 : 1.6}
                      />
                    )}
                  </span>
                )}
                <span class="profileCard__chipContent">
                  <span class="profileCard__chipLabel">{entry.label}</span>
                  <span class="profileCard__chipValue">{entry.value}</span>
                </span>
              </a>
            </li>
          );
        })
      }
    </ul>
  </div>
</section>

<ul
  class="profileCardContactsMobile cardRail"
  aria-label="Ways to reach Tulio"
  data-reveal
  data-reveal-group="profile-card"
  data-reveal-order="1"
>
  {
    _contacts.map((entry) => {
      const brand = entry.icon ? getBrandIcon(entry.icon) : null;
      const iconStyle = brand?.ink ? { "--chip-icon-color": brand.ink } : undefined;
      return (
        <li>
          <a
            class="profileCard__chip"
            href={entry.href}
            target="_blank"
            rel="noreferrer noopener"
          >
            {entry.icon && (
              <span
                class="profileCard__chipIcon"
                aria-hidden="true"
                style={iconStyle}
                data-brand={brand ? entry.icon : undefined}
              >
                {brand ? (
                  <BrandIcon name={entry.icon} size={20} />
                ) : (
                  <SFIcon
                    name={entry.icon}
                    size={20}
                    stroke={entry.icon === "calendar" ? 1.4 : 1.6}
                  />
                )}
              </span>
            )}
            <span class="profileCard__chipContent">
              <span class="profileCard__chipLabel">{entry.label}</span>
              <span class="profileCard__chipValue">{entry.value}</span>
            </span>
          </a>
        </li>
      );
    })
  }
</ul>

<style>
  .profileCard {
    position: relative;
    display: grid;
    grid-template-columns: clamp(150px, 16vw, 180px) 1fr;
    gap: clamp(var(--space-md), 3vw, var(--space-lg));
    padding: clamp(var(--space-sm), 3vw, var(--space-lg));
    border-radius: var(--radius-lg);
    border: 1px solid var(--panel-border);
    max-width: 100%;
    box-shadow: var(--shadow-card);
    transition:
      transform var(--motion-duration-sm) var(--motion-spring-out),
      box-shadow var(--motion-duration-sm) var(--motion-ease-out),
      border-color var(--motion-duration-sm) var(--motion-ease-out);
    will-change: transform, box-shadow, border-color;
  }

  [data-theme="dark"] .profileCard {
    background: rgba(28, 28, 30, 0.92);
    border: 1px solid rgba(255, 255, 255, 0.106);
  }

  [data-theme="light"] .profileCard {
    background: rgba(248, 248, 251, 0.96);
    border: 1px solid rgba(60, 60, 67, 0.106);
  }

  /* Inset highlight for depth */
  .profileCard::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 1px;
    background: linear-gradient(
      90deg,
      rgba(255, 255, 255, 0) 0%,
      rgba(255, 255, 255, 0.1) 50%,
      rgba(255, 255, 255, 0) 100%
    );
    pointer-events: none;
    z-index: 1;
  }

  .profileCard:hover {
    transform: translateY(-2px);
    box-shadow: var(--shadow-card-hover);
  }

  [data-theme="dark"] .profileCard:hover {
    border-color: rgba(255, 255, 255, 0.158);
  }

  [data-theme="light"] .profileCard:hover {
    border-color: rgba(60, 60, 67, 0.158);
  }

  .profileCard__media {
    display: flex;
    align-items: flex-start;
    justify-content: center;
    position: relative;
  }

  .profileCard__media::before {
    content: "";
    position: absolute;
    inset: clamp(-32px, -6vw, -18px);
    border-radius: 48px;
    opacity: 0.5;
    filter: blur(42px);
    z-index: 0;
    pointer-events: none;
  }

  [data-theme="dark"] .profileCard__media::before {
    background:
      radial-gradient(
        circle at 25% 20%,
        rgba(77, 166, 255, 0.36) 0%,
        transparent 60%
      ),
      radial-gradient(
        circle at 70% 80%,
        rgba(94, 196, 204, 0.28) 0%,
        transparent 70%
      );
    opacity: 0.5;
  }

  [data-theme="light"] .profileCard__media::before {
    background:
      radial-gradient(
        circle at 25% 20%,
        rgba(0, 113, 227, 0.36) 0%,
        transparent 60%
      ),
      radial-gradient(
        circle at 70% 80%,
        rgba(94, 196, 204, 0.28) 0%,
        transparent 70%
      );
    opacity: 0.6;
    filter: blur(48px);
  }

  .profileCard__photo {
    position: relative;
    width: clamp(124px, 16vw, 172px);
    height: clamp(124px, 16vw, 172px);
    border-radius: 22px;
    border: 1px solid var(--panel-border);
    overflow: hidden;
    margin: 0;
    z-index: 1;
    box-shadow: var(--shadow-card);
  }

  [data-theme="dark"] .profileCard__photo {
    background: rgba(48, 48, 52, 0.95);
    border: 1px solid rgba(255, 255, 255, 0.15);
  }

  [data-theme="light"] .profileCard__photo {
    background: rgba(248, 248, 251, 0.95);
    border: 1px solid rgba(60, 60, 67, 0.106);
  }

  .profileCard__photo::after {
    content: "";
    position: absolute;
    inset: 0;
    background: radial-gradient(
      circle at 30% 20%,
      rgba(255, 255, 255, 0.28),
      transparent 60%
    );
    pointer-events: none;
  }

  .profileCard__photo img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .profileCard__content {
    display: grid;
    gap: clamp(var(--space-sm), 2vw, var(--space-md));
  }

  .profileCard__header {
    display: grid;
    gap: var(--space-xxs);
  }

  .profileCard__eyebrow {
    margin: 0;
    font-size: var(--fs--2);
    letter-spacing: 0.08em;
    text-transform: uppercase;
  }

  [data-theme="dark"] .profileCard__eyebrow {
    color: rgba(235, 235, 245, 0.58);
  }

  [data-theme="light"] .profileCard__eyebrow {
    color: rgba(60, 60, 67, 0.58);
  }

  .profileCard__name {
    margin: 0;
    font-size: clamp(26px, 1.8vw + 16px, 38px);
    font-weight: 700;
    letter-spacing: -0.02em;
    color: var(--text);
  }

  .profileCard__title {
    margin: 0;
    font-size: 17px;
    font-weight: 500;
  }

  [data-theme="dark"] .profileCard__title {
    color: rgba(235, 235, 245, 0.75);
  }

  [data-theme="light"] .profileCard__title {
    color: rgba(60, 60, 67, 0.75);
  }

  .profileCard__meta {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(180px, 1fr));
    gap: var(--space-xs) clamp(var(--space-sm), 2vw, var(--space-md));
    margin: 0;
  }

  .profileCard__metaItem {
    display: grid;
    gap: var(--space-xxs);
  }

  .profileCard__metaItem dt {
    display: flex;
    align-items: center;
    gap: var(--space-xs);
    margin: 0;
    font-size: var(--fs--2);
    text-transform: uppercase;
    letter-spacing: 0.08em;
  }

  [data-theme="dark"] .profileCard__metaItem dt {
    color: rgba(235, 235, 245, 0.65);
  }

  [data-theme="light"] .profileCard__metaItem dt {
    color: rgba(60, 60, 67, 0.65);
  }

  .profileCard__metaLabel {
    display: inline-flex;
    align-items: center;
    gap: 4px;
  }

  .profileCard__metaItem dd {
    margin: 0;
    font-size: var(--fs--1);
    font-weight: 600;
    color: var(--text);
    word-break: break-word;
  }

  .profileCard__metaItem dd a {
    color: inherit;
    text-decoration: none;
  }

  .profileCard__metaItem dd a:hover {
    text-decoration: underline;
  }

  .profileCard__metaIcon {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    width: 28px;
    height: 28px;
    border-radius: 12px;
    border: 1px solid var(--panel-border);
    box-shadow: var(--shadow-card);
  }

  [data-theme="dark"] .profileCard__metaIcon {
    background: rgba(48, 48, 52, 0.95);
    color: rgba(235, 235, 245, 0.78);
    border: 1px solid rgba(255, 255, 255, 0.15);
  }

  [data-theme="light"] .profileCard__metaIcon {
    background: rgba(248, 248, 251, 0.95);
    color: rgba(60, 60, 67, 0.78);
    border: 1px solid rgba(60, 60, 67, 0.106);
  }

  .profileCard__metaIcon :global(svg) {
    width: 16px;
    height: 16px;
  }

  .profileCard__summary {
    margin: 0;
    font-size: 16px;
    line-height: 1.55;
    max-width: 56ch;
  }

  [data-theme="dark"] .profileCard__summary {
    color: rgba(235, 235, 245, 0.85);
  }

  [data-theme="light"] .profileCard__summary {
    color: rgba(60, 60, 67, 0.85);
  }

  .profileCard__contacts {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: var(--space-sm);
    list-style: none;
    margin: 0;
    padding: 0;
  }

  .profileCardContactsMobile {
    display: none;
    list-style: none;
    padding: 0;
    margin: var(--space-lg) 0 0;
    border-radius: var(--radius-lg);
    box-shadow: var(--shadow-card);
    transition:
      transform var(--motion-duration-sm) var(--motion-spring-out),
      box-shadow var(--motion-duration-sm) var(--motion-ease-out),
      border-color var(--motion-duration-sm) var(--motion-ease-out);
    will-change: transform, box-shadow, border-color;
  }

  [data-theme="dark"] .profileCardContactsMobile {
    background: rgba(29, 29, 32, 1);
    border: 1px solid rgba(255, 255, 255, 0.106);
  }

  [data-theme="light"] .profileCardContactsMobile {
    background: rgba(248, 248, 251, 1);
    border: 1px solid rgba(60, 60, 67, 0.106);
  }

  /* Remove cardRail gradient overlay */
  .profileCardContactsMobile::after {
    display: none;
  }

  .profileCardContactsMobile li {
    display: flex;
  }

  .profileCard__chip {
    position: relative;
    display: grid;
    grid-template-columns: auto 1fr;
    align-items: center;
    gap: clamp(var(--space-xs), 1.5vw, var(--space-sm));
    border-radius: var(--radius-md);
    border: 1px solid var(--panel-border);
    padding: calc(var(--space-sm) - 2px) calc(var(--space-md) - 4px);
    color: var(--text);
    text-decoration: none;
    transition:
      transform var(--motion-duration-sm) var(--motion-spring-out),
      box-shadow var(--motion-duration-sm) var(--motion-ease-out),
      border-color var(--motion-duration-sm) var(--motion-ease-out),
      background var(--motion-duration-sm) var(--motion-ease-out);
    overflow: hidden;
    will-change: transform, box-shadow, background;
    box-shadow: var(--shadow-card);
  }

  [data-theme="dark"] .profileCard__chip {
    background: rgba(28, 28, 30, 0.92);
    border: 1px solid rgba(255, 255, 255, 0.106);
  }

  [data-theme="light"] .profileCard__chip {
    background: rgba(248, 248, 251, 0.96);
    border: 1px solid rgba(60, 60, 67, 0.106);
  }

  .profileCard__chip::after {
    content: "";
    position: absolute;
    inset: 2px;
    border-radius: calc(var(--radius-md) - 8px);
    opacity: 0;
    transition: opacity var(--motion-duration-sm) var(--motion-ease-out);
    pointer-events: none;
    z-index: 0;
  }

  [data-theme="dark"] .profileCard__chip::after {
    background: linear-gradient(
      140deg,
      rgba(77, 166, 255, 0.28) 0%,
      transparent 70%
    );
  }

  [data-theme="light"] .profileCard__chip::after {
    background: linear-gradient(
      140deg,
      rgba(0, 113, 227, 0.28) 0%,
      transparent 70%
    );
  }

  [data-theme="dark"] .profileCard__chip:hover {
    background: rgba(29, 29, 32, 0.96);
    border-color: rgba(255, 255, 255, 0.158);
    box-shadow:
      var(--shadow-card-hover),
      0 0 40px rgba(77, 166, 255, 0.18);
    transform: translateY(-4px) scale(var(--motion-scale-sm));
  }

  [data-theme="light"] .profileCard__chip:hover {
    background: rgba(255, 255, 255, 0.98);
    border-color: rgba(60, 60, 67, 0.158);
    box-shadow:
      var(--shadow-card-hover),
      0 0 30px rgba(0, 113, 227, 0.18);
    transform: translateY(-4px) scale(var(--motion-scale-sm));
  }

  .profileCard__chip:hover::after {
    opacity: 0.85;
  }

  [data-theme="dark"] .profileCard__chip:focus-visible {
    outline: none;
    border-color: rgba(255, 255, 255, 0.158);
    box-shadow:
      var(--focus-ring),
      var(--shadow-card-hover),
      0 0 36px rgba(77, 166, 255, 0.22);
    transform: translateY(-2px) scale(var(--motion-scale-xs));
  }

  [data-theme="light"] .profileCard__chip:focus-visible {
    outline: none;
    border-color: rgba(60, 60, 67, 0.158);
    box-shadow:
      var(--focus-ring),
      var(--shadow-card-hover),
      0 0 30px rgba(0, 113, 227, 0.22);
    transform: translateY(-2px) scale(var(--motion-scale-xs));
  }

  .profileCard__chip:focus-visible::after {
    opacity: 0.9;
  }

  .profileCard__chipIcon {
    display: grid;
    place-items: center;
    width: 34px;
    height: 34px;
    border-radius: var(--radius-sm);
    border: 1px solid var(--panel-border);
    box-shadow: var(--shadow-card);
    position: relative;
    z-index: 1;
  }

  [data-theme="dark"] .profileCard__chipIcon {
    background: rgba(48, 48, 52, 0.95);
    color: rgba(235, 235, 245, 0.82);
    border: 1px solid rgba(255, 255, 255, 0.15);
  }

  [data-theme="light"] .profileCard__chipIcon {
    background: rgba(248, 248, 251, 0.95);
    color: rgba(60, 60, 67, 0.82);
    border: 1px solid rgba(60, 60, 67, 0.106);
  }

  .profileCard__chipIcon :global(svg) {
    width: 20px;
    height: 20px;
  }

  @media (prefers-reduced-motion: reduce) {
    .profileCard__chip,
    .profileCard__chip:hover,
    .profileCard__chip:focus-visible {
      transition: none;
      transform: none;
    }
  }

  [data-theme="dark"] .profileCard__chipIcon[data-brand] {
    color: rgba(255, 255, 255, 0.9);
  }

  [data-theme="light"] .profileCard__chipIcon[data-brand] {
    color: rgba(60, 60, 67, 0.85);
  }

  .profileCard__chipContent {
    display: grid;
    gap: 2px;
    position: relative;
    z-index: 1;
  }

  .profileCard__chipLabel {
    font-size: var(--fs--2);
    text-transform: uppercase;
    letter-spacing: 0.06em;
  }

  [data-theme="dark"] .profileCard__chipLabel {
    color: rgba(235, 235, 245, 0.6);
  }

  [data-theme="light"] .profileCard__chipLabel {
    color: rgba(60, 60, 67, 0.6);
  }

  .profileCard__chipValue {
    font-size: var(--fs--1);
    font-weight: 600;
    word-break: break-word;
  }


  @media (max-width: 1100px) {
    .profileCard {
      grid-template-columns: minmax(140px, 0.8fr) 1fr;
      gap: clamp(var(--space-sm), 2vw, var(--space-md));
    }
  }

  @media (max-width: 820px) {
    .profileCard {
      grid-template-columns: 1fr;
      gap: clamp(var(--space-sm), 2vw, var(--space-md));
    }

    .profileCard__media {
      justify-content: flex-start;
    }

    .profileCard__photo {
      width: 118px;
      height: 118px;
      border-radius: 22px;
    }
  }

  @media (max-width: 520px) {
    .profileCard {
      padding: clamp(var(--space-sm), 4vw, var(--space-md));
    }

    .profileCard__photo {
      width: 108px;
      height: 108px;
      border-radius: 20px;
    }

    .profileCard__meta {
      grid-template-columns: 1fr;
    }

    .profileCard__contactsDesktop {
      display: none;
    }

    .profileCardContactsMobile {
      display: flex;
      gap: var(--space-sm);
      overflow-x: auto;
      padding: var(--space-sm);
      margin-inline: calc(-1 * var(--space-sm));
      scrollbar-width: none;
    }

    .profileCardContactsMobile::-webkit-scrollbar {
      display: none;
    }

    .profileCardContactsMobile li {
      flex: 0 0 min(74vw, 240px);
    }
  }
</style>
